// Code generated by MockGen. DO NOT EDIT.
// Source: sns.go

// Package mock_queueUtils is a generated GoMock package.
package mock_queueUtils

import (
	reflect "reflect"

	sns "github.com/aws/aws-sdk-go/service/sns"
	gomock "github.com/golang/mock/gomock"
)

// MockSNSSession is a mock of SNSSession interface.
type MockSNSSession struct {
	ctrl     *gomock.Controller
	recorder *MockSNSSessionMockRecorder
}

// MockSNSSessionMockRecorder is the mock recorder for MockSNSSession.
type MockSNSSessionMockRecorder struct {
	mock *MockSNSSession
}

// NewMockSNSSession creates a new mock instance.
func NewMockSNSSession(ctrl *gomock.Controller) *MockSNSSession {
	mock := &MockSNSSession{ctrl: ctrl}
	mock.recorder = &MockSNSSessionMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSNSSession) EXPECT() *MockSNSSessionMockRecorder {
	return m.recorder
}

// Publish mocks base method.
func (m *MockSNSSession) Publish(input *sns.PublishInput) (*sns.PublishOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Publish", input)
	ret0, _ := ret[0].(*sns.PublishOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Publish indicates an expected call of Publish.
func (mr *MockSNSSessionMockRecorder) Publish(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Publish", reflect.TypeOf((*MockSNSSession)(nil).Publish), input)
}
